# Copyright 2017 Google LLC All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###############################################
# Client Frontend
###############################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      run: frontend
  replicas: 2
  template:
    metadata:
      labels:
        run: frontend
    spec:
      containers:
      - name: frontend
        image: gcr.io/sredig-gaming-test/space-agon-frontend:INDEV-20191105-154836
        imagePullPolicy: Always
        ports:
        - containerPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    run: frontend
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    run: frontend
  type: LoadBalancer

---

###############################################
# Dedicated Servers
###############################################

apiVersion: "agones.dev/v1"
kind: Fleet
metadata:
  name: dedicated
spec:
  replicas: 2
  template:
    spec:
      ports:
      - name: default
        portPolicy: Dynamic
        containerPort: 2156
        protocol: TCP
      template:
        spec:
          containers:
          - name: dedicated
            image: gcr.io/sredig-gaming-test/space-agon-dedicated:INDEV-20191105-154836
            imagePullPolicy: Always
            resources:
              requests:
                memory: "200Mi"
                cpu: "500m"
              limits:
                memory: "200Mi"
                cpu: "500m"

---

apiVersion: "autoscaling.agones.dev/v1"
kind: FleetAutoscaler
metadata:
  name: dedicated-autoscaler
spec:
  fleetName: dedicated
  policy:
    type: Buffer
    buffer:
      bufferSize: 2
      minReplicas: 0
      maxReplicas: 50

---

###############################################
# Open Match Configuration (note namespace)
###############################################

apiVersion: v1
kind: ConfigMap
metadata:
  name: om-configmap-override
  namespace: open-match
  labels:
    app: open-match
    component: config
    release: open-match
data:
  matchmaker_config_override.yaml: |-
    api:
      evaluator:
        hostname: "om-evaluator"
        grpcport: "50508"
        httpport: "51508"
    synchronizer:
      enabled: true
      registrationIntervalMs: 3000ms
      proposalCollectionIntervalMs: 2000ms
    logging:
      rpc: true

---

###############################################
# Director
###############################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: director
spec:
  selector:
    matchLabels:
      run: director
  replicas: 1
  template:
    metadata:
      labels:
        run: director
    spec:
      serviceAccount: fleet-allocator
      containers:
      - name: director
        image: gcr.io/sredig-gaming-test/space-agon-director:INDEV-20191105-154836
        imagePullPolicy: Always

---

# Create a Role in the default namespace that grants access to the agones api
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: fleet-allocator
  labels:
    app: fleet-allocator
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]
- apiGroups: ["allocation.agones.dev"]
  resources: ["gameserverallocations"]
  verbs: ["create"]
- apiGroups: ["agones.dev"]
  resources: ["fleets"]
  verbs: ["get"]

---
# Create a ServiceAccount that will be bound to the above role
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fleet-allocator
  labels:
    app: fleet-allocator

---
# Bind the fleet-allocator ServiceAccount to the fleet-allocator Role
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: fleet-allocator
  labels:
    app: fleet-allocator
subjects:
- kind: ServiceAccount
  name: fleet-allocator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fleet-allocator

---

###############################################
# Match Making Function
###############################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mmf
spec:
  selector:
    matchLabels:
      run: mmf
  replicas: 2
  template:
    metadata:
      labels:
        run: mmf
    spec:
      containers:
      - name: mmf
        image: gcr.io/sredig-gaming-test/space-agon-mmf:INDEV-20191105-154836
        imagePullPolicy: Always
        ports:
        - containerPort: 50502

---

apiVersion: v1
kind: Service
metadata:
  name: mmf
  labels:
    run: mmf
spec:
  ports:
  - port: 50502
    protocol: TCP
  selector:
    run: mmf
